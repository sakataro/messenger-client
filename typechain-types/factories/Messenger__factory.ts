/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  PayableOverrides,
  BigNumberish,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Messenger, MessengerInterface } from "../Messenger";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_numOfPendingLimits",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "MessageConfirmed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "depositInWei",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "text",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isPending",
        type: "bool",
      },
    ],
    name: "NewMessage",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "limits",
        type: "uint256",
      },
    ],
    name: "NumOfPendingLimitsChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "accept",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limits",
        type: "uint256",
      },
    ],
    name: "changeNumOfPendingLimits",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "deny",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwnMessages",
    outputs: [
      {
        components: [
          {
            internalType: "address payable",
            name: "sender",
            type: "address",
          },
          {
            internalType: "address payable",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "depositInWei",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "text",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isPending",
            type: "bool",
          },
        ],
        internalType: "struct Messenger.Message[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numOfPendingLimits",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ownable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_text",
        type: "string",
      },
      {
        internalType: "address payable",
        name: "_receiver",
        type: "address",
      },
    ],
    name: "post",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526040516200200e3803806200200e8339818101604052810190620000299190620001e0565b620000746040518060400160405280602081526020017f68657265206973206d7920666972737420736d61727420636f6e7472616374218152506200009260201b62000c551760201c565b620000846200013560201b60201c565b8060038190555050620002d0565b6200013281604051602401620000a99190620002ac565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200017760201b60201c565b50565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b600080fd5b6000819050919050565b620001ba81620001a5565b8114620001c657600080fd5b50565b600081519050620001da81620001af565b92915050565b600060208284031215620001f957620001f8620001a0565b5b60006200020984828501620001c9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156200024e57808201518184015260208101905062000231565b60008484015250505050565b6000601f19601f8301169050919050565b6000620002788262000212565b6200028481856200021d565b9350620002968185602086016200022e565b620002a1816200025a565b840191505092915050565b60006020820190508181036000830152620002c881846200026b565b905092915050565b611d2e80620002e06000396000f3fe60806040526004361061007b5760003560e01c8063837106bb1161004e578063837106bb1461010c5780638da5cb5b14610135578063acdb8efd14610160578063b38854be1461018b5761007b565b806313e262711461008057806319b05f491461009c57806339869bc3146100c557806356f66282146100f0575b600080fd5b61009a60048036038101906100959190611190565b6101a2565b005b3480156100a857600080fd5b506100c360048036038101906100be9190611222565b6104a1565b005b3480156100d157600080fd5b506100da6106d8565b6040516100e7919061125e565b60405180910390f35b61010a60048036038101906101059190611222565b6106de565b005b34801561011857600080fd5b50610133600480360381019061012e9190611222565b610915565b005b34801561014157600080fd5b5061014a6109e6565b604051610157919061129a565b60405180910390f35b34801561016c57600080fd5b50610175610a0a565b60405161018291906114b8565b60405180910390f35b34801561019757600080fd5b506101a0610c13565b005b600354600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410610225576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021c9061155d565b60405180910390fd5b6102666040518060400160405280601f81526020017f257320706f73747320746578743a205b25735d20746f6b656e3a205b25645d00815250338434610cee565b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b691906115ac565b92505081905550600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060c001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815260200134815260200142815260200184815260200160011515815250908060018154018082558091505060019003906000526020600020906006020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030155608082015181600401908161043891906117ec565b5060a08201518160050160006101000a81548160ff02191690831515021790555050507f6b8f49facd5e00a27899ac1ac6cd3edeb40299f83f03eac03a0c04e7a9059096338234428660016040516104959695949392919061195b565b60405180910390a15050565b6104aa81610d90565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106104fd576104fc6119c3565b5b90600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820180546105e69061160f565b80601f01602080910402602001604051908101604052809291908181526020018280546106129061160f565b801561065f5780601f106106345761010080835404028352916020019161065f565b820191906000526020600020905b81548152906001019060200180831161064257829003601f168201915b505050505081526020016005820160009054906101000a900460ff161515151581525050905061069781602001518260400151610efe565b7f2657c0f1a183b8a175f4cf6c3f6d7764c7265155fc9635682baad3cedd67d2878160200151836040516106cc9291906119f2565b60405180910390a15050565b60035481565b6106e781610d90565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061073a576107396119c3565b5b90600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152602001600382015481526020016004820180546108239061160f565b80601f016020809104026020016040519081016040528092919081815260200182805461084f9061160f565b801561089c5780601f106108715761010080835404028352916020019161089c565b820191906000526020600020905b81548152906001019060200180831161087f57829003601f168201915b505050505081526020016005820160009054906101000a900460ff16151515158152505090506108d481600001518260400151610efe565b7f2657c0f1a183b8a175f4cf6c3f6d7764c7265155fc9635682baad3cedd67d2878160200151836040516109099291906119f2565b60405180910390a15050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146109a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099a90611a67565b60405180910390fd5b806003819055507ff4add848113971c4866581c1df1951b8665a05140021ce0d344d1e823b8133c86003546040516109db919061125e565b60405180910390a150565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610c0a57838290600052602060002090600602016040518060c00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482018054610b5e9061160f565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8a9061160f565b8015610bd75780601f10610bac57610100808354040283529160200191610bd7565b820191906000526020600020905b815481529060010190602001808311610bba57829003601f168201915b505050505081526020016005820160009054906101000a900460ff16151515158152505081526020019060010190610a6b565b50505050905090565b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610ceb81604051602401610c699190611a87565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610faf565b50565b610d8a84848484604051602401610d089493929190611aa9565b6040516020818303038152906040527f91d1112e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610faf565b50505050565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610de357610de26119c3565b5b906000526020600020906006020190508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7c90611b6e565b60405180910390fd5b600115158160050160009054906101000a900460ff16151514610edd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed490611c00565b60405180910390fd5b60008160050160006101000a81548160ff0219169083151502179055505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682604051610f2490611c51565b60006040518083038185875af1925050503d8060008114610f61576040519150601f19603f3d011682016040523d82523d6000602084013e610f66565b606091505b5050905080610faa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fa190611cd8565b60405180910390fd5b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61103f82610ff6565b810181811067ffffffffffffffff8211171561105e5761105d611007565b5b80604052505050565b6000611071610fd8565b905061107d8282611036565b919050565b600067ffffffffffffffff82111561109d5761109c611007565b5b6110a682610ff6565b9050602081019050919050565b82818337600083830152505050565b60006110d56110d084611082565b611067565b9050828152602081018484840111156110f1576110f0610ff1565b5b6110fc8482856110b3565b509392505050565b600082601f83011261111957611118610fec565b5b81356111298482602086016110c2565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061115d82611132565b9050919050565b61116d81611152565b811461117857600080fd5b50565b60008135905061118a81611164565b92915050565b600080604083850312156111a7576111a6610fe2565b5b600083013567ffffffffffffffff8111156111c5576111c4610fe7565b5b6111d185828601611104565b92505060206111e28582860161117b565b9150509250929050565b6000819050919050565b6111ff816111ec565b811461120a57600080fd5b50565b60008135905061121c816111f6565b92915050565b60006020828403121561123857611237610fe2565b5b60006112468482850161120d565b91505092915050565b611258816111ec565b82525050565b6000602082019050611273600083018461124f565b92915050565b600061128482611132565b9050919050565b61129481611279565b82525050565b60006020820190506112af600083018461128b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6112ea81611152565b82525050565b6112f9816111ec565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561133957808201518184015260208101905061131e565b60008484015250505050565b6000611350826112ff565b61135a818561130a565b935061136a81856020860161131b565b61137381610ff6565b840191505092915050565b60008115159050919050565b6113938161137e565b82525050565b600060c0830160008301516113b160008601826112e1565b5060208301516113c460208601826112e1565b5060408301516113d760408601826112f0565b5060608301516113ea60608601826112f0565b50608083015184820360808601526114028282611345565b91505060a083015161141760a086018261138a565b508091505092915050565b600061142e8383611399565b905092915050565b6000602082019050919050565b600061144e826112b5565b61145881856112c0565b93508360208202850161146a856112d1565b8060005b858110156114a657848403895281516114878582611422565b945061149283611436565b925060208a0199505060018101905061146e565b50829750879550505050505092915050565b600060208201905081810360008301526114d28184611443565b905092915050565b600082825260208201905092915050565b7f54686520726563656976657220686173207265616368656420746865206e756d60008201527f626572206f662070656e64696e67206c696d6974730000000000000000000000602082015250565b60006115476035836114da565b9150611552826114eb565b604082019050919050565b600060208201905081810360008301526115768161153a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115b7826111ec565b91506115c2836111ec565b92508282019050808211156115da576115d961157d565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061162757607f821691505b60208210810361163a576116396115e0565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026116a27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611665565b6116ac8683611665565b95508019841693508086168417925050509392505050565b6000819050919050565b60006116e96116e46116df846111ec565b6116c4565b6111ec565b9050919050565b6000819050919050565b611703836116ce565b61171761170f826116f0565b848454611672565b825550505050565b600090565b61172c61171f565b6117378184846116fa565b505050565b5b8181101561175b57611750600082611724565b60018101905061173d565b5050565b601f8211156117a05761177181611640565b61177a84611655565b81016020851015611789578190505b61179d61179585611655565b83018261173c565b50505b505050565b600082821c905092915050565b60006117c3600019846008026117a5565b1980831691505092915050565b60006117dc83836117b2565b9150826002028217905092915050565b6117f5826112ff565b67ffffffffffffffff81111561180e5761180d611007565b5b611818825461160f565b61182382828561175f565b600060209050601f8311600181146118565760008415611844578287015190505b61184e85826117d0565b8655506118b6565b601f19841661186486611640565b60005b8281101561188c57848901518255600182019150602085019450602081019050611867565b868310156118a957848901516118a5601f8916826117b2565b8355505b6001600288020188555050505b505050505050565b60006118d96118d46118cf84611132565b6116c4565b611132565b9050919050565b60006118eb826118be565b9050919050565b60006118fd826118e0565b9050919050565b61190d816118f2565b82525050565b600061191e826112ff565b61192881856114da565b935061193881856020860161131b565b61194181610ff6565b840191505092915050565b6119558161137e565b82525050565b600060c082019050611970600083018961128b565b61197d6020830188611904565b61198a604083018761124f565b611997606083018661124f565b81810360808301526119a98185611913565b90506119b860a083018461194c565b979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000604082019050611a076000830185611904565b611a14602083018461124f565b9392505050565b7f596f75206172656e277420746865206f776e6572000000000000000000000000600082015250565b6000611a516014836114da565b9150611a5c82611a1b565b602082019050919050565b60006020820190508181036000830152611a8081611a44565b9050919050565b60006020820190508181036000830152611aa18184611913565b905092915050565b60006080820190508181036000830152611ac38187611913565b9050611ad2602083018661128b565b8181036040830152611ae48185611913565b9050611af3606083018461124f565b95945050505050565b7f4f6e6c79207468652072656365697665722063616e20636f6e6669726d4d657360008201527f7361676520746865206d65737361676500000000000000000000000000000000602082015250565b6000611b586030836114da565b9150611b6382611afc565b604082019050919050565b60006020820190508181036000830152611b8781611b4b565b9050919050565b7f54686973206d6573736167652068617320616c7265616479206265656e20636f60008201527f6e6669726d656400000000000000000000000000000000000000000000000000602082015250565b6000611bea6027836114da565b9150611bf582611b8e565b604082019050919050565b60006020820190508181036000830152611c1981611bdd565b9050919050565b600081905092915050565b50565b6000611c3b600083611c20565b9150611c4682611c2b565b600082019050919050565b6000611c5c82611c2e565b9150819050919050565b7f4661696c656420746f20776974686472617720415641582066726f6d20636f6e60008201527f7472616374000000000000000000000000000000000000000000000000000000602082015250565b6000611cc26025836114da565b9150611ccd82611c66565b604082019050919050565b60006020820190508181036000830152611cf181611cb5565b905091905056fea26469706673582212207472710e8cef9c4def9b9c03ae1a62145c3a11ae45bd0b770289ebe21ceb577264736f6c63430008110033";

type MessengerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MessengerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Messenger__factory extends ContractFactory {
  constructor(...args: MessengerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _numOfPendingLimits: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<Messenger> {
    return super.deploy(
      _numOfPendingLimits,
      overrides || {}
    ) as Promise<Messenger>;
  }
  override getDeployTransaction(
    _numOfPendingLimits: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_numOfPendingLimits, overrides || {});
  }
  override attach(address: string): Messenger {
    return super.attach(address) as Messenger;
  }
  override connect(signer: Signer): Messenger__factory {
    return super.connect(signer) as Messenger__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MessengerInterface {
    return new utils.Interface(_abi) as MessengerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Messenger {
    return new Contract(address, _abi, signerOrProvider) as Messenger;
  }
}
